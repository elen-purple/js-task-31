{"mappings":"AAAA,MAAM;IACJ,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAE;QACpC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;IACpB;IACA,UAAU;QACR,MAAM,aAAa,IAAI,KAAK,IAAI,CAAC,UAAU;QAC3C,IAAI,UAAU,KAAK,GAAG;QACtB,IAAI,MAAM,aAAa;QACvB,IAAI,OAAO,KAAK,KAAK,CAAC,MAAM,OAAO,KAAK,KAAK;QAC7C,OAAO;QACP,IAAI,QAAQ,KAAK,KAAK,CAAC,MAAM,OAAO,KAAK;QACzC,OAAO;QACP,IAAI,OAAO,KAAK,KAAK,CAAC,MAAM,OAAO;QACnC,OAAO;QACP,IAAI,OAAO,KAAK,KAAK,CAAC,MAAM;QAC5B,MAAM,QAAQ,SAAS,aAAa,CAAC,IAAI,CAAC,QAAQ;QAClD,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GAAG;QACzD,MAAM,aAAa,CAAC,CAAC,oBAAoB,CAAC,EAAE,WAAW,GACrD,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG;QACzB,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GAAG,GAAG,MAAM,CAAC,QAAQ,CACzE,GACA;QAEF,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GAAG,GAAG,MAAM,CAAC,QAAQ,CACzE,GACA;QAEF,YAAY;YACV,UAAU,KAAK,GAAG;YAClB,IAAI,MAAM,aAAa;YACvB,OAAO,KAAK,KAAK,CAAC,MAAM,OAAO,KAAK,KAAK;YACzC,OAAO;YACP,QAAQ,KAAK,KAAK,CAAC,MAAM,OAAO,KAAK;YACrC,OAAO;YACP,OAAO,KAAK,KAAK,CAAC,MAAM,OAAO;YAC/B,OAAO;YACP,OAAO,KAAK,KAAK,CAAC,MAAM;YACxB,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GAAG;YACzD,MAAM,aAAa,CAAC,CAAC,oBAAoB,CAAC,EAAE,WAAW,GACrD,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG;YACzB,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GACpD,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG;YACxB,MAAM,aAAa,CAAC,CAAC,mBAAmB,CAAC,EAAE,WAAW,GACpD,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG;QAC1B,GAAG;IACL;AACF;AACA,IAAI,eAAe;IACjB,UAAU;IACV,YAAY,IAAI,KAAK;AACvB,GAAG,OAAO","sources":["src/index.js"],"sourcesContent":["class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n  }\r\n  setDate() {\r\n    const targetDate = new Date(this.targetDate);\r\n    let nowDate = Date.now();\r\n    let dif = targetDate - nowDate;\r\n    let days = Math.floor(dif / 1000 / 60 / 60 / 24);\r\n    dif %= 1000 * 60 * 60 * 24;\r\n    let hours = Math.floor(dif / 1000 / 60 / 60);\r\n    dif %= 1000 * 60 * 60;\r\n    let mins = Math.floor(dif / 1000 / 60);\r\n    dif %= 1000 * 60;\r\n    let secs = Math.floor(dif / 1000);\r\n    const timer = document.querySelector(this.selector);\r\n    timer.querySelector(`[data-value=\"days\"]`).textContent = days;\r\n    timer.querySelector(`[data-value=\"hours\"]`).textContent =\r\n      `${hours}`.padStart(2, \"0\");\r\n    timer.querySelector(`[data-value=\"mins\"]`).textContent = `${mins}`.padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    timer.querySelector(`[data-value=\"secs\"]`).textContent = `${secs}`.padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    setInterval(() => {\r\n      nowDate = Date.now();\r\n      let dif = targetDate - nowDate;\r\n      days = Math.floor(dif / 1000 / 60 / 60 / 24);\r\n      dif %= 1000 * 60 * 60 * 24;\r\n      hours = Math.floor(dif / 1000 / 60 / 60);\r\n      dif %= 1000 * 60 * 60;\r\n      mins = Math.floor(dif / 1000 / 60);\r\n      dif %= 1000 * 60;\r\n      secs = Math.floor(dif / 1000);\r\n      timer.querySelector(`[data-value=\"days\"]`).textContent = days;\r\n      timer.querySelector(`[data-value=\"hours\"]`).textContent =\r\n        `${hours}`.padStart(2, \"0\");\r\n      timer.querySelector(`[data-value=\"mins\"]`).textContent =\r\n        `${mins}`.padStart(2, \"0\");\r\n      timer.querySelector(`[data-value=\"secs\"]`).textContent =\r\n        `${secs}`.padStart(2, \"0\");\r\n    }, 1000);\r\n  }\r\n}\r\nnew CountdownTimer({\r\n  selector: \"#timer-1\",\r\n  targetDate: new Date(\"Jul 17, 2025\"),\r\n}).setDate();\r\n"],"names":[],"version":3,"file":"js-task-31.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}